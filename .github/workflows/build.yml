name: ROS2 arm64

on:
  # push:
  #   branches: [ master ]
  # pull_request:
  #   branches: [ master ]

  workflow_dispatch:

env:
  IMAGE: arm64v8/debian:bullseye

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: install docker container
        run: |
          sudo apt update
          sudo apt install -y qemu-user-static
          docker pull $IMAGE

      - uses: actions/checkout@v2

      - name: start a container and keep it alive
        run: |
          docker run --name ros2_build --platform linux/arm64 --mount type=bind,source=$GITHUB_WORKSPACE,target=/ros2 -di $IMAGE bash
          docker container ls -a

      - name: test running container
        run: |
          docker container ls -a
          docker exec --interactive ros2_build cat /etc/os-release
          docker exec --interactive ros2_build uname -a

      - name: download sources and install dependencies
        run: docker exec --interactive ros2_build /ros2/install_ros.sh

      # build subset of packages in stages to prevent exceeding the 6h job execution time limit

      - name: build (rcl)
        run: docker exec --interactive ros2_build /ros2/build_packages.sh rcl

      - name: build (ros_base)
        run: docker exec --interactive ros2_build /ros2/build_packages.sh rcl ros_base

      - name: build (image_common)
        run: docker exec --interactive ros2_build /ros2/build_packages.sh ros_base image_common

      - name: build (vision_opencv)
        run: docker exec --interactive ros2_build /ros2/build_packages.sh image_common vision_opencv

      - name: build (demo_nodes_cpp)
        run: docker exec --interactive ros2_build /ros2/build_packages.sh vision_opencv demo_nodes_cpp

      - uses: actions/upload-artifact@v2
        with:
          name: ros2-debian-arm64
          path: $GITHUB_WORKSPACE/install/
